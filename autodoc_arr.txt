/**
 * @method  static  bool accessible(mixed $value) 
 * @see \Inilim\Tool\Method\Arr\accessible()
 * 
 * @method  static  array add(array $array, string $key, mixed $value) 
 * @see \Inilim\Tool\Method\Arr\add()
 * 
 * @method  static  array collapse(iterable $array) 
 * @see \Inilim\Tool\Method\Arr\collapse()
 * 
 * @method  static  bool compareValues(array $a, array $b, array $arrays) 
 * @see \Inilim\Tool\Method\Arr\compareValues()
 * 
 * @method  static  array crossJoin(iterable ... $arrays) 
 * @see \Inilim\Tool\Method\Arr\crossJoin()
 * 
 * @method  static  mixed dataFill(mixed $target, string|string[] $key, mixed $value) 
 * @see \Inilim\Tool\Method\Arr\dataFill()
 * 
 * @method  static  mixed dataGet(mixed $target, string|array|int|null $key, mixed $default = null) 
 * @see \Inilim\Tool\Method\Arr\dataGet()
 * 
 * @method  static  mixed dataGet2(mixed $target, string|array|int|null $key, mixed $default = null) 
 * @see \Inilim\Tool\Method\Arr\dataGet2()
 * 
 * @method  static  mixed dataSet(mixed $target, string|string[] $key, mixed $value, bool $overwrite = true) 
 * @see \Inilim\Tool\Method\Arr\dataSet()
 * 
 * @method  static  array divide(array $array) 
 * @see \Inilim\Tool\Method\Arr\divide()
 * 
 * @method  static  array dot(iterable $array, string $prepend = '') 
 * @see \Inilim\Tool\Method\Arr\dot()
 * 
 * @method  static  void each(array $array, callable(TValue,TKey): mixed $callback) 
 * @see \Inilim\Tool\Method\Arr\each()
 * 
 * @method  static  void eachSpread(array $array, callable(...mixed): mixed $callback) 
 * @see \Inilim\Tool\Method\Arr\eachSpread()
 * 
 * @method  static  array except(array $array, (string|int)[]|string|int $keys) 
 * @see \Inilim\Tool\Method\Arr\except()
 * 
 * @method  static  array exceptNestedArray(array $array, (string|int)[]|string|int $keys, int $depth = 1) 
 * @see \Inilim\Tool\Method\Arr\exceptNestedArray()
 * 
 * @method  static  bool exists(\ArrayAccess|array $array, string|int $key) 
 * @see \Inilim\Tool\Method\Arr\exists()
 * 
 * @method  static  array flatten(iterable $array, int $depth) 
 * @see \Inilim\Tool\Method\Arr\flatten()
 * 
 * @method  static  void forget(array $array, (string|int)[]|string|int $keys) 
 * @see \Inilim\Tool\Method\Arr\forget()
 * 
 * @method  static  mixed|D get(\ArrayAccess|array $array, string|int|null $key, D $default = null) 
 * @see \Inilim\Tool\Method\Arr\get()
 * 
 * @method  static  string[] getDotKeys(array $target, string $dotPattern) 
 * @see \Inilim\Tool\Method\Arr\getDotKeys()
 * 
 * @method  static  null|int getKeyOffset(array $array, string|int $key) 
 * @see \Inilim\Tool\Method\Arr\getKeyOffset()
 * 
 * @method  static  bool has(\ArrayAccess|array $array, (string|int)[]|string|int $keys) 
 * @see \Inilim\Tool\Method\Arr\has()
 * 
 * @method  static  bool hasAny(\ArrayAccess|array $array, (string|int)[]|int|string|null $keys) 
 * @see \Inilim\Tool\Method\Arr\hasAny()
 * 
 * @method  static  bool hasValue(array $array, mixed[]|mixed $values, bool $strict = false) 
 * @see \Inilim\Tool\Method\Arr\hasValue()
 * 
 * @method  static  bool hasValueAny(array $array, mixed[]|mixed $values, bool $strict = false) 
 * @see \Inilim\Tool\Method\Arr\hasValueAny()
 * 
 * @method  static  TValue|false head(array<TValue> $array) 
 * @see \Inilim\Tool\Method\Arr\head()
 * 
 * @method  static  void insertAfter(array $array, string|int|null $key, array $inserted) 
 * @see \Inilim\Tool\Method\Arr\insertAfter()
 * 
 * @method  static  void insertBefore(array $array, string|int|null $key, array $inserted) 
 * @see \Inilim\Tool\Method\Arr\insertBefore()
 * 
 * @method  static  bool isAssoc(array $array) 
 * @see \Inilim\Tool\Method\Arr\isAssoc()
 * 
 * @method  static  bool isList(array $array) 
 * @see \Inilim\Tool\Method\Arr\isList()
 * 
 * @method  static  bool isMultidimensional(array $array) 
 * @see \Inilim\Tool\Method\Arr\isMultidimensional()
 * 
 * @method  static  string join(array $array, string $glue, string $final_glue = '') 
 * @see \Inilim\Tool\Method\Arr\join()
 * 
 * @method  static  array keysLower(array $array) 
 * @see \Inilim\Tool\Method\Arr\keysLower()
 * 
 * @method  static  array keysLowerNestedArray(array $array, int $depth = 1) 
 * @see \Inilim\Tool\Method\Arr\keysLowerNestedArray()
 * 
 * @method  static  array keysUpper(array $array) 
 * @see \Inilim\Tool\Method\Arr\keysUpper()
 * 
 * @method  static  array keysUpperNestedArray(array $array, int $depth = 1) 
 * @see \Inilim\Tool\Method\Arr\keysUpperNestedArray()
 * 
 * @method  static  TValue|false last(array<TValue> $array) 
 * @see \Inilim\Tool\Method\Arr\last()
 * 
 * @method  static  TReturn[] map(array<TKey,TValue> $array, callable(TValue,TKey):TReturn $callback) 
 * @see \Inilim\Tool\Method\Arr\map()
 * 
 * @method  static  array mapFilter(array<TKey,TValue> $array, callable(TValue,TKey):mixed $callback, mixed $filteringValue = null, bool $preserveKeys = false) 
 * @see \Inilim\Tool\Method\Arr\mapFilter()
 * 
 * @method  static  array mapSpread(array $array, callable $callback) 
 * @see \Inilim\Tool\Method\Arr\mapSpread()
 * 
 * @method  static  array mapToGroups(array<TKey,TValue> $array, callable(TValue,TKey) $callback) 
 * @see \Inilim\Tool\Method\Arr\mapToGroups()
 * 
 * @method  static  array mapWithKeys(array<TKey, TValue> $array, callable(TValue, TKey): array<TMapWithKeysKey, TMapWithKeysValue> $callback) 
 * @see \Inilim\Tool\Method\Arr\mapWithKeys()
 * 
 * @method  static  array only(array $array, (string|int)[]|string|int $keys) 
 * @see \Inilim\Tool\Method\Arr\only()
 * 
 * @method  static  array onlyNestedArray(array $array, (string|int)[]|string|int $keys, int $depth = 1) 
 * @see \Inilim\Tool\Method\Arr\onlyNestedArray()
 * 
 * @method  static  array pluck(iterable $array, string|array|int|null $value, string|string[]|null $key = null) 
 * @see \Inilim\Tool\Method\Arr\pluck()
 * 
 * @method  static  array prepend(array $array, mixed $value, mixed $key = null) 
 * @see \Inilim\Tool\Method\Arr\prepend()
 * 
 * @method  static  array prependKeysWith(array $array, string $prepend_with) 
 * @see \Inilim\Tool\Method\Arr\prependKeysWith()
 * 
 * @method  static  mixed pull(array $array, string|int $key, mixed $default = null) 
 * @see \Inilim\Tool\Method\Arr\pull()
 * 
 * @method  static  string query(array $array) 
 * @see \Inilim\Tool\Method\Arr\query()
 * 
 * @method  static  TValue|TValue[]|array<TKey,TValue>|array{} random(array<TKey,TValue> $array, int|null $number = null, bool $preserve_keys = false) 
 * @see \Inilim\Tool\Method\Arr\random()
 * 
 * @method  static  bool renameDotKey(array $array, string $oldKey, string $newKey) 
 * @see \Inilim\Tool\Method\Arr\renameDotKey()
 * 
 * @method  static  bool renameKey(array $array, string|int $oldKey, string|int $newKey) 
 * @see \Inilim\Tool\Method\Arr\renameKey()
 * 
 * @method  static  array resetKeysRecursive(array $array) 
 * @see \Inilim\Tool\Method\Arr\resetKeysRecursive()
 * 
 * @method  static  array set(array $array, null|string $key, mixed $value) 
 * @see \Inilim\Tool\Method\Arr\set()
 * 
 * @method  static  bool setValueIfEmpty(array $array, string $key_dot,  $value) 
 * @see \Inilim\Tool\Method\Arr\setValueIfEmpty()
 * 
 * @method  static  bool setValueIfNotExists(array $array, string $key_dot, mixed $value) 
 * @see \Inilim\Tool\Method\Arr\setValueIfNotExists()
 * 
 * @method  static  bool setValueIfNull(array $array, string $key_dot, mixed $value) 
 * @see \Inilim\Tool\Method\Arr\setValueIfNull()
 * 
 * @method  static  array shuffle(array $array, null|int $seed = null) 
 * @see \Inilim\Tool\Method\Arr\shuffle()
 * 
 * @method  static  TArray sortBy(TArray $arr, string $by, int $options = sort_regular, bool $descending = false) 
 * @see \Inilim\Tool\Method\Arr\sortBy()
 * 
 * @method  static  array sortRecursive(array $array, int $options = sort_regular, bool $descending = true) 
 * @see \Inilim\Tool\Method\Arr\sortRecursive()
 * 
 * @method  static  array sortRecursiveDesc(array $array, int $options = sort_regular) 
 * @see \Inilim\Tool\Method\Arr\sortRecursiveDesc()
 * 
 * @method  static  array<int,array<K,T>> splitIntoChunks(array<K,T> $array, int $chunks, bool $preserve_keys = false, bool $remove_empty_chunks = false) 
 * @see \Inilim\Tool\Method\Arr\splitIntoChunks()
 * 
 * @method  static  TArray take(TArray $array, int $limit) 
 * @see \Inilim\Tool\Method\Arr\take()
 * 
 * @method  static  array undot(iterable $array) 
 * @see \Inilim\Tool\Method\Arr\undot()
 * 
 * @method  static  TValue[] unique(TValue[] $array) 
 * @see \Inilim\Tool\Method\Arr\unique()
 * 
 * @method  static  mixed value(mixed $value) 
 * @see \Inilim\Tool\Method\Arr\value()
 * 
 * @method  static  TValue[]|array<TKey,TValue> where(array<TKey,TValue> $array, callable(TValue,TKey) $callback, bool $preserve_keys = true) 
 * @see \Inilim\Tool\Method\Arr\where()
 * 
 * @method  static  array wrap(mixed $value) 
 * @see \Inilim\Tool\Method\Arr\wrap()
 * 
 */